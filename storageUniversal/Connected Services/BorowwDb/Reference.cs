//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.28307.1000
// 
namespace storageUniversal.BorowwDb {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BorowwDb.BorowwingsDBSoap")]
    public interface BorowwingsDBSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalcAmountOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<float> CalcAmountOutAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAmountOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateAmountOutAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserAmountOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateUserAmountOutAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddLending", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> AddLendingAsync(int itemId, string lentForWho, System.DateTime whenBorowwed, float amountBorowwed, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLandings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLandingsAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getNameAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteLanding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> DeleteLandingAsync(storageUniversal.BorowwDb.Borrow borrow, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBorrow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> updateBorrowAsync(storageUniversal.BorowwDb.Borrow oldborrow, storageUniversal.BorowwDb.Borrow newBorrow, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBorrowTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task updateBorrowTestAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Borrow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int itemIdField;
        
        private string borrowedByField;
        
        private System.DateTime whenField;
        
        private float quantityField;
        
        private float borrowingIdField;
        
        private int userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
                this.RaisePropertyChanged("ItemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BorrowedBy {
            get {
                return this.borrowedByField;
            }
            set {
                this.borrowedByField = value;
                this.RaisePropertyChanged("BorrowedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime When {
            get {
                return this.whenField;
            }
            set {
                this.whenField = value;
                this.RaisePropertyChanged("When");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
                this.RaisePropertyChanged("Quantity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float BorrowingId {
            get {
                return this.borrowingIdField;
            }
            set {
                this.borrowingIdField = value;
                this.RaisePropertyChanged("BorrowingId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BorowwingsDBSoapChannel : storageUniversal.BorowwDb.BorowwingsDBSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorowwingsDBSoapClient : System.ServiceModel.ClientBase<storageUniversal.BorowwDb.BorowwingsDBSoap>, storageUniversal.BorowwDb.BorowwingsDBSoap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BorowwingsDBSoapClient() : 
                base(BorowwingsDBSoapClient.GetDefaultBinding(), BorowwingsDBSoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BorowwingsDBSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BorowwingsDBSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BorowwingsDBSoapClient.GetBindingForEndpoint(endpointConfiguration), BorowwingsDBSoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BorowwingsDBSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BorowwingsDBSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BorowwingsDBSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BorowwingsDBSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BorowwingsDBSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<float> CalcAmountOutAsync(int itemId) {
            return base.Channel.CalcAmountOutAsync(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAmountOutAsync(int itemId) {
            return base.Channel.UpdateAmountOutAsync(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAmountOutAsync(int UserId) {
            return base.Channel.UpdateUserAmountOutAsync(UserId);
        }
        
        public System.Threading.Tasks.Task<int> AddLendingAsync(int itemId, string lentForWho, System.DateTime whenBorowwed, float amountBorowwed, int userId) {
            return base.Channel.AddLendingAsync(itemId, lentForWho, whenBorowwed, amountBorowwed, userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLandingsAsync(int UserId) {
            return base.Channel.GetLandingsAsync(UserId);
        }
        
        public System.Threading.Tasks.Task<string> getNameAsync(int itemId) {
            return base.Channel.getNameAsync(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLandingAsync(storageUniversal.BorowwDb.Borrow borrow, string email, string password) {
            return base.Channel.DeleteLandingAsync(borrow, email, password);
        }
        
        public System.Threading.Tasks.Task<bool> updateBorrowAsync(storageUniversal.BorowwDb.Borrow oldborrow, storageUniversal.BorowwDb.Borrow newBorrow, string email, string password) {
            return base.Channel.updateBorrowAsync(oldborrow, newBorrow, email, password);
        }
        
        public System.Threading.Tasks.Task updateBorrowTestAsync() {
            return base.Channel.updateBorrowTestAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BorowwingsDBSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BorowwingsDBSoap)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:50581/BorowwingsDB.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return BorowwingsDBSoapClient.GetBindingForEndpoint(EndpointConfiguration.BorowwingsDBSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return BorowwingsDBSoapClient.GetEndpointAddress(EndpointConfiguration.BorowwingsDBSoap);
        }
        
        public enum EndpointConfiguration {
            
            BorowwingsDBSoap,
        }
    }
}
